type Menu{
    id:String!,
    time:String,
    list:[String],
    name:String,
    typeInt:Int,
}

type Dish{
    id:String,
    name:String!,
    pic:String!,
    freq: Int!,
    intType: Int!,
    description:String!,
    avb:Int!
}

input MenuInput{
    id:String
}

input DishInput{
    id:String,
    name:String,
    pic:String,
    freq: Int,
    intType: Int,
    description:String,
    avb:Int,
    label:String,
    pageNo:Int,
    pageSize:Int
}

input MenuListInput{
    pageNo:Int!,
    pageSize:Int!
    name:String,
    typeInt:Int,
    time:String
}

type MutationResponse{
    code:Int,
    message:String
}


type Query{
    menu(input:MenuInput):Menu!
    menuList(input:MenuListInput):[Menu]!
    dish(input:DishInput):Dish!
    dishList(input:DishInput):[Dish]!
}

type Mutation{
    addDish(input:DishInput):MutationResponse
    updateDish(input:DishInput):MutationResponse
}
